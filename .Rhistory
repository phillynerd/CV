install.packages("vitae")
library(vitae)
tinytex::tlmgr_update()
?tlmgr_update
tinytex::tlmgr_update(self = T)
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::is_tinytex()
library(tinytex)
is_tinytex()
library(tinytex)
library(vitae)
is_tinytex()
tinytex:::is_tinytex()
install.packages("googlesheets")
library(googlesheets)
googlesheets::gs_ls
googlesheets::gs_ls()
googlesheets::gs_ls()
googlesheets::gs_ls()
?gs_ls()
gs_ls("CV_education")
gs_ls("CV_")
gs_ls("CV_Education")
gs_ls()
gs_ls("Education")
library(vitae)
library(googlesheets)
gs_ls("CV")
gs_ls("gap")
gs_ls("cv")
gs_ls("CV")
gs_ls("Workouts")
gs_ls("Workouts")
gs_ls("CV_Education")
library(googlesheets)
gs_ls("CV_Education")
gs_gap() %>%
gs_copy(to = "Gapminder")
gs_title("CV_Education")
CVedu <- gs_title("CV_Education")
CVedu %>%
gs_browse()
CVedu %>%
gs_read()
CVedu<- GS_CVedu %>%
gs_read()
GS_CVedu <- gs_title("CV_Education")
CVedu<- GS_CVedu %>%
gs_read()
extract_key_from_url(https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0)
extract_key_from_url(https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0)
extract_key_from_url("https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0")
CVedu_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0")
GS_CVedu <- gs_key ("CVedu_key")
CVedu_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0")
GS_CVedu <- gs_key(CVedu_key)
CVedu<- GS_CVedu %>%
gs_read()
CVedu
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
#education
CVedu_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0")
GS_CVedu <- gs_key(CVedu_key)
CVedu<- GS_CVedu %>%
gs_read()
brief_entries(CVedu,
what = Degree,
when = Date_Complete,
with = School)
brief_entries(CVedu,
what = if(is.na(Degree), Course_of_Study,
brief_entries(CVedu,
what = ifelse(is.na(Degree), Course_of_Study,
paste0(Course_of_Study, ": ", Degree)
when = Date_Complete,
brief_entries(CVedu,
what = ifelse(is.na(Degree), Course_of_Study,
paste0(Course_of_Study, ": ", Degree)),
when = Date_Complete,
with = School)
CVjob_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1XIKWwsRaQqRCVEzeIWFMCpin2I0Znyn1-3NLcjagS8o/edit#gid=0")
CVjob_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1XIKWwsRaQqRCVEzeIWFMCpin2I0Znyn1-3NLcjagS8o/edit#gid=0")
GS_CVjob <- gs_key(CVjob_key)
CVjob<- GS_CVjob %>%
gs_read()
CVjob<- GS_CVjob %>%
gs_read("Sheet1")
CVjob_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1XIKWwsRaQqRCVEzeIWFMCpin2I0Znyn1-3NLcjagS8o/edit#gid=0")
GS_CVjob <- gs_key(CVjob_key)
CVjob<- GS_CVjob %>%
gs_read("Jobs")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(googlesheets)
library(tidyverse)
#education
CVedu_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1M3y33nzpoTKt7J_GesfTa2EE8FcRPJwGZZeBUBj1qqc/edit#gid=0")
GS_CVedu <- gs_key(CVedu_key)
CVedu<- GS_CVedu %>%
gs_read()
#jobs
CVjob_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1XIKWwsRaQqRCVEzeIWFMCpin2I0Znyn1-3NLcjagS8o/edit#gid=0")
GS_CVjob <- gs_key(CVjob_key)
CVjob<- GS_CVjob %>%
gs_read("Jobs")
CVjobs %>%
arrange(desc(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Year_Start, " to ", Year_Finish),
with = Workplace,
why = Details) %>%
CVjobs %>%
arrange(desc(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Year_Start, " to ", Year_Finish),
with = Workplace,
why = Details)
CVjobs %>%
arrange(desc(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Year_Start, " to ", Year_Finish),
with = Workplace,
why = Details)
CVjob %>%
arrange(desc(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Year_Start, " to ", Year_Finish),
with = Workplace,
why = Details)
CVjob %>%
arrange(desc(as.numeric(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
CVjob %>%
arrange(desc(as.numeric(Year_Finish)) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
CVjob %>%
arrange(desc(as.numeric(Year_Finish))) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
#jobs
CVjob_key <- extract_key_from_url("https://docs.google.com/spreadsheets/d/1XIKWwsRaQqRCVEzeIWFMCpin2I0Znyn1-3NLcjagS8o/edit#gid=0")
GS_CVjob <- gs_key(CVjob_key)
CVjob<- GS_CVjob %>%
gs_read("Jobs")
CVjob %>%
arrange(desc(as.numeric(Year_Finish))) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
CVjob %>%
arrange(desc(Workplace, as.numeric(Year_Finish))) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
CVjob %>%
arrange(Workplace, desc(as.numeric(Year_Finish))) %>%
detailed_entries (what = Title,
when = paste0(Startdate, " to ", Enddate),
with = Workplace,
why = Details)
devtools::install_github("ropenscilabs/vitae")
#devtools::install_github("ropenscilabs/vitae")
library(vitae)
install.packages("rorcid")
rorcid::startup
rorcid::
?startup
rorcid::
?Startup
orcid_auth()
library(rorcid)
orcid_auth()
<- orcid_auth()
Test <- orcid_auth()
Test
?gsub
Test <- str_remove(orcid_auth, "Bearer ")
Test <- str_remove(orcid_auth, "Bearer ","")
Test <- str_remove("Bearer test", "Bearer ","")
Test <- str_remove("Bearer test", "Bearer ")
Test
Test <- str_remove("FullKey", "Bearer ")
Test
Test <- str_remove(FullKey, "Bearer ")
FullKey <- orcid_auth()
Test <- str_remove(FullKey, "Bearer ")
Test
?Startup
?Sys.setenv
Sys.setenv(ORCID_TOKEN = orchidtoken)
Sys.setenv(ORCID_TOKEN = orchid_token)
orchid_token <- str_remove(FullKey, "Bearer ")
Sys.setenv(ORCID_TOKEN = orchid_token)
Sys.getenv("ORCID_TOKEN")
as.orcid(x = "0000-0002-0576-083X")
me <- as.orcid(x = "0000-0002-0576-083X")
browse(me)
works(me)
orc_CVpub <- works(me)
orc_CVpub
orc_CVpub %>% View()
orc_CVpub %>% View()
orc_CVpub %>%
arrange(desc(`publication-date.year.value`)) %>%
detailed_entries(
what = title.title.value,
when = `publication-date.year.value`,
where = `journal-title.value`
)
---
name: Jessica Streeter
position: "Data Scientist"
address: "1433 S 18th St, Philadelphia PA 19146"
phone: 631 678 7222
www: phillynerd.netlify.com
email: "jstreeter.rutgers@gmail.com"
twitter: phillynerd
github: phillynerd
linkedin: jessica-streeter-9053a630
headcolor: #f4bf42
date: "`r format(Sys.time(), '%B %Y')`"
aboutme: "Jessica is a driven, self-motivated data scientist who is passionate about issues of mental health, social justice, and socioeconomic disparities in health care. She was trained as a medical sociologist with an emphasis on mental illness, quantitative methodologies, and research methods."
output: vitae::ModernCV
---
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
orc_CVpub <- works(me)
levels(orc_CVpub)
levels(orc_CVpub$type)
unique(orc_CVpub$type)
?case_when
orc_CVpub %>%
mutate(type_clean = case_when(type == "book-chapter" ~ "Peer Reviewed Book Chapter",
type == "journal-article" ~ "Journal Article",
type == "magazine-article" ~ "Magazine",
type %in% c("conference-abstract","conference-paper") ~ "Conference",
type == "book" ~ "Book",
TRUE == NA))
orc_CVpub %>%
mutate(type_clean = case_when(type == "book-chapter" ~ "Peer Reviewed Book Chapter",
type == "journal-article" ~ "Journal Article",
type == "magazine-article" ~ "Magazine",
type %in% c("conference-abstract","conference-paper") ~ "Conference",
type == "book" ~ "Book",
TRUE == NA))
orc_CVpub %>%
mutate(type_clean = case_when(type %in% "book-chapter" ~ "Peer Reviewed Book Chapter",
type == "journal-article" ~ "Journal Article",
type == "magazine-article" ~ "Magazine",
type %in% c("conference-abstract","conference-paper") ~ "Conference",
type == "book" ~ "Book",
TRUE == NA))
orc_CVpub %>%
mutate(type_clean = case_when(type == "book-chapter" = T ~ "Peer Reviewed Book Chapter",
type == "journal-article" ~ "Journal Article",
type == "magazine-article" ~ "Magazine",
type %in% c("conference-abstract","conference-paper") ~ "Conference",
type == "book" ~ "Book",
TRUE == NA))
orc_CVpub %>%
mutate(type_clean = ifelse(type == "book-chapter", "Peer Reviewed Book Chapter",
ifelse(type == "journal-article", "Journal Article",
ifelse(type == "magazine-article", "Magazine",
ifelse(type %in% c("conference-abstract","conference-paper"), "Conference",
ifelse(type == "book", "Book", NA))))))
orcid()
me
CVjob
